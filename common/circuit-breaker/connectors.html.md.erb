---
title: Spring Cloud&reg; Connectors
owner: Spring Cloud Services
---

<strong><%= modified_date %></strong>

To connect client applications to the Circuit Breaker Dashboard, Spring Cloud Services uses [Spring Cloud Connectors](https://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html), including the [Spring Cloud Cloud Foundry Connector](https://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html), which discovers services bound to applications running in Cloud Foundry.

## <a id="service-detection"></a>Service Detection

The connector inspects Cloud Foundry's `VCAP_SERVICES` environment variable, which stores connection and identification information for service instances that are bound to Cloud Foundry applications, to detect available services. Below is an example excerpt of a `VCAP_SERVICES` entry for the Spring Cloud Services Circuit Breaker Dashboard (edited for brevity).

```json
{
 "VCAP_SERVICES": {
  "p-circuit-breaker-dashboard": [
   {
    "credentials": {
     "dashboard": "https://hystrix-67b8d606-c287-4fb1-9b3f-bd5cb27a29b5.wise.com",
     "stream": "https://turbine-67b8d606-c287-4fb1-9b3f-bd5cb27a29b5.wise.com"
    },
    "label": "p-circuit-breaker-dashboard",
    "name": "circuit-breaker-dashboard",
    "plan": "standard",
    "tags": [
     "circuit-breaker",
     "hystrix-amqp",
     "spring-cloud"
    ]
   }
  ]
```

For each service in the `VCAP_SERVICES` variable, the connector considers the following fields:

* `tags`: Attributes or names of backing technologies behind the service.
* `label`: The service offering's name (not to be confused with a service _instance's_ name).
* `credentials.uri`: A URI pertaining to the service instance.
* `credentials.uris`: URIs pertaining to the service instance.

### <a id="circuit-breaker-dashboard-detection-criteria"></a>Circuit Breaker Dashboard Detection Criteria

To establish availability of the Circuit Breaker Dashboard, the Spring Cloud Cloud Foundry Connector compares `VCAP_SERVICES` service entries against the following criteria:

* `tags` including `hystrix-amqp`

## <a id="metrics-collection-with-spring-cloud-stream"></a>Metrics Collection with Spring Cloud Stream

A Circuit Breaker Dashboard service instance uses [Spring Cloud Stream](https://cloud.spring.io/spring-cloud-stream/) to collect Netflix Hystrix metrics from a client application. The connector creates a `hystrix` configuration of the Spring Cloud Stream [RabbitMQ binder](https://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/#_rabbitmq_binder) and configures a `hystrixStreamOutput` channel, over which a client application sends Hystrix metrics.

The `defaultCandidate` property on the `hystrix` RabbitMQ binder configuration is set to `false`, so that this binder configuration will not affect any default binder configuration in the client application and you can freely configure Spring Cloud Stream binders (including the RabbitMQ binder) in the client application. For more information, see ["Connecting to Multiple Systems" in the Spring Cloud Stream Reference Guide](https://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/#multiple-systems).

## <a id="see-also"></a>See Also

For more information about Spring Cloud Connectors, see the following:

* [Spring Cloud Cloud Foundry Connector documentation](https://cloud.spring.io/spring-cloud-connectors/spring-cloud-cloud-foundry-connector.html)
* [Spring Cloud Spring Service Connector documentation](https://cloud.spring.io/spring-cloud-connectors/spring-cloud-spring-service-connector.html)
* [Spring Cloud Connectors documentation](https://cloud.spring.io/spring-cloud-connectors/spring-cloud-connectors.html)
* [Spring Cloud Connectors for Spring Cloud Services on Pivotal Cloud Foundry](https://github.com/pivotal-cf/spring-cloud-services-connector)
