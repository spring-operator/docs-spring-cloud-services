---
title: Release Notes for Spring Cloud&reg; Services on Pivotal Cloud Foundry
owner: Spring Cloud Services
---

<html class="list-style-none"></html>

<style>
    .note.warning {
        background-color: #fdd;
        border-color: #fbb
    }

    .note.warning:before {
        color: #f99;
     }
</style>

Release notes for [Spring Cloud Services for Pivotal Cloud Foundry](https://network.pivotal.io/products/p-spring-cloud-services) (PCF)

<p class='note'><strong>Important</strong>: The service broker applications in Spring Cloud Services 1.5 use the <code>system</code> org's system domain, and expect this domain to be a shared domain (the default setting). If you make the <code>system</code> org's system domain private, Spring Cloud Services 1.5 will fail to push applications to the <code>system</code> org.</p>

## <a id="1-5-0-migrating-from-1-4-x"></a>Migrating from 1.4.x

For each client application, you must:

* Update the build file to use the new versions of the Spring Cloud Services client dependencies (see [Client Dependencies](/spring-cloud-services/1-5/common/client-dependencies.html))

## <a id="1-5-0-migrating-from-1-3-x"></a>Migrating from 1.3.x

For each client application, you must:

* Update the build file to use the new versions of the Spring Cloud Services client dependencies (see [Client Dependencies](/spring-cloud-services/1-5/common/client-dependencies.html))

## <a id="1-5-0-migrating-from-1-2-x"></a>Migrating from 1.2.x

For each client application, you must:

* Update the build file to use the new versions of the Spring Cloud Services client dependencies (see [Client Dependencies](/spring-cloud-services/1-5/common/client-dependencies.html))

## <a id="1-5-0-migrating-from-1-1-x"></a>Migrating from 1.1.x

For each client application, you must:

* Update the build file to use the new versions of the Spring Cloud Services client dependencies (see [Client Dependencies](/spring-cloud-services/1-5/common/client-dependencies.html))

## <a id="1-5-0-migrating-from-1-0-x"></a>Migrating from 1.0.x

For each client application, you must:

* Update the build file to use the new versions of the Spring Cloud Services client dependencies (see [Client Dependencies](/spring-cloud-services/1-5/common/client-dependencies.html))
* Update the build file to use the Maven BOM dependencies for Spring Boot and Spring Cloud (see [Client Dependencies](/spring-cloud-services/1-5/common/client-dependencies.html))

For each Circuit Breaker Dashboard service instance, you must:

* Upgrade the service instance (see [Service Instance Upgrades](/spring-cloud-services/1-5/common/service-instance-upgrades.html)), then unbind, rebind, and restart each of the service instance's client applications (this is due to a change in how service instance credentials are managed)

## <a id="1-5-0-known-issues"></a>Known Issues

See below for known issues in Spring Cloud Services 1.5.x.

* Version 1.5.6 and prior: Passwords created by Spring Cloud Services do not support changes made to the UAA password policy.
* Spring Cloud Services releases 1.5.5 and previous are not compatible with PCF Ops Manager 2.2.

## <a id="1-5-8"></a>1.5.8

**Release Date: 21st August 2018**

Fixes included in this release:

* Resolved an issue that could prevent the "Deploy Service Broker" errand of the Spring Cloud Services tile from completing sucessfully in a Cloud Foundry foundation with a large number of spaces.

## <a id="1-5-7"></a>1.5.7

**Release Date: 7th August 2018**

Fixes included in this release:

* Added support for custom password policies configured on Pivotal Application Service.

## <a id="1-5-6"></a>1.5.6

**Release Date: 2nd July 2018**

Fixes included in this release:

* Resolved an incompatibility with PCF Ops Manager 2.2.

## <a id="1-5-5"></a>1.5.5

**Release Date: 18th June 2018**

Fixes included in this release:

* Resolved a Spring Cloud Services service broker incompatibility with MySQL service instances provided by the Azure Open Service Broker for PCF.

## <a id="1-5-4"></a>1.5.4

**Release Date: 7th June 2018**

Enhancements included in this release:

* Service broker requests to the Cloud Foundry API have been optimized to better support large-scale deployments of Spring Cloud Services.

## <a id="1-5-3"></a>1.5.3

**Release Date: 21st May 2018**

Enhancements included in this release:

* Upgrade to Spring Cloud OSS Edgware.SR3 release.

## <a id="1-5-2"></a>1.5.2

**Release Date: 26th February 2018**

Enhancements included in this release:

* The stemcell has been updated to 3468. This resolves the following issues:
  * [[USN-3554-1]](https://www.ubuntu.com/usn/usn-3554-1/): curl vulnerabilities
  * [[USN-3543-1]](https://www.ubuntu.com/usn/usn-3543-1/): rsync vulnerabilities
  * [[USN-3547-1]](https://www.ubuntu.com/usn/usn-3547-1/): Libtasn1 vulnerabilities
  * [[USN-3582-2]](https://www.ubuntu.com/usn/usn-3582-2/): Linux kernel (Xenial HWE) vulnerabilities

## <a id="1-5-1"></a>1.5.1

**Release Date: 29th January 2018**

Enhancements included in this release:

* Resolved an issue with the Spring Cloud Services support for _beta_ CredHub service broker integration. This issue occurred if the Spring Cloud Services service broker received an error from CredHub when attempting to delete credentials: the binding or instance deletion operation would fail and leave the service instance in a broken state. The Spring Cloud Services broker now handles this situation by not failing due to a failed CredHub binding deletion attempt.

## <a id="1-5-0"></a>1.5.0

**Release Date: 22nd December 2017**

Enhancements included in this release:

* The Spring Cloud Services service broker and worker apps now can use the Runtime CredHub to store service instance credentials. Operators can enable use of CredHub in the Spring Cloud Services tile settings. For more information, see the [Secure Service Instance Credentials with CredHub](/spring-cloud-services/tile-configuration.html#secure-service-instance-credentials-with-credhub) section of the [Tile Configuration](/spring-cloud-services/tile-configuration.html) topic.
* The dependent services used by the Spring Cloud Services service broker are now configurable during installation by operators. Operators can specify alternative services and service plans for the service broker's persistence store (the default is MySQL for PCF) and message bus (the default is RabbitMQ for PCF) services. For more information, see the [Installation](/spring-cloud-services/installation.html) topic.
    <p class='note'><strong>Note</strong>: The new settings for persistence store and message bus services affect the service broker's dependent services only (they do not affect services used by service instances).</p>
* The Config Server's composite backend now accepts the `pattern` and `searchPaths` properties for a Git backend within a composite. For more information, see the [Composite Backends](/spring-cloud-services/common/config-server/composite-backends.html) topic.
* The Spring Cloud Services service broker has been upgraded to Spring Boot 1.5.7 and Spring Cloud Edgware.RELEASE.
